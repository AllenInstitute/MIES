IGOR
WAVES/T/N=(197,6)	labnotebook_numerical_description
BEGIN
	"Name"	"Unit"	"Tolerance"	"Description"	"Headstage Contingency"	"ClampMode"
	"SweepNum"	""	"-"	"Sweep number: Non-repeating non-negative numeric identifier for sweep time series. Increments in the order of acquisition. Starts at zero."	"ALL"	""
	"TimeStamp"	"s"	"-"	"Time Stamp: Seconds since Igor epoch (1/1/1904) in local time zone with millisecond precision. Written at time of labnotebook entry."	"ALL"	""
	"TimeStampSinceIgorEpochUTC"	"s"	"-"	"Time Stamp: Seconds since Igor epoch (1/1/1904) in coordinated universal time zone (UTC) with millisecond precision. Written at time of labnotebook entry."	"ALL"	""
	"EntrySourceType"	""	"-"	"Entry source type: type of the labnotebook entry, 0 for data acquisition, 1 for test pulse, NaN for all other types including user entries.\r"	"ALL"	""
	"AcquisitionState"	""	"-"	"Stores the current numbered state of data acquisition."	"ALL"	""
	"TP Baseline Vm"	"mV"	"1"	"Testpulse Baseline: Average membrane potential, see https://alleninstitute.github.io/MIES/CalculateTPLikePropsFromSweep.html"	"DEPEND"	"IC;I=0"
	"TP Baseline pA"	"pA"	"50"	"Testpulse Baseline: Average holding current, see https://alleninstitute.github.io/MIES/CalculateTPLikePropsFromSweep.html"	"DEPEND"	"VC"
	"TP Peak Resistance"	"MΩ"	"runtime"	"Testpulse Peak Resistance: Instantaneous resistance measurement calculated from testpulse profile, https://alleninstitute.github.io/MIES/CalculateTPLikePropsFromSweep.html"	"DEPEND"	""
	"TP Steady State Resistance"	"MΩ"	"runtime"	"Testpulse Steady State Resistance: Resistance measurement obtained from the end of the applied testpulse profile, see https://alleninstitute.github.io/MIES/CalculateTPLikePropsFromSweep.html"	"DEPEND"	""
	"Fast compensation capacitance"	"F"	"1e-12"	"Fast capacitance compensation: Cp Fast sets the parameters of current injected into the headstage at voltage steps to charge (and discharge) the fast component of electrode capacitance. The adjustable fields display estimates of the magnitudeand time constant for this capacitance.\r\rFor theoretical details see the MultiClamp700B Manual."	"DEPEND"	""
	"Slow compensation capacitance"	"F"	"1e-12"	"Slow capacitance compensation: Settings for Cp Slow determine the parameters of current injected into the headstage at voltage steps to charge and discharge the slow component of electrode capacitance. The adjustable fields display estimates of themagnitude and time constant for this capacitance.\r\rFor theoretical details see the MultiClamp700B Manual."	"DEPEND"	""
	"Fast compensation time"	"s"	"1e-6"	"Fast compensation time: Time constant for Fast compensation\r\rFor theoretical details see the MultiClamp700B Manual."	"DEPEND"	""
	"Slow compensation time"	"s"	"1e-6"	"Slow compensation time: Time constant for slow compensation\r\rFor theoretical details see the MultiClamp700B Manual."	"DEPEND"	""
	"Headstage Active"	"On/Off"	"-"	"Headstage Active State: Specifies if the hardware associated with the headstage is in use."	"DEPEND"	""
	"DAC"	""	"0.1"	"Digital Analog Channel used for testpulse or data acquisition"	"ALL"	""
	"ADC"	""	"0.1"	"Analog digital channel used for testpulse or data acquisition"	"ALL"	""
	"Clamp Mode"	""	"-"	"Amplifier clamp state: One of 0 (VC aka Voltage Clamp), 1 (IC aka Current Clamp), 2 (I=0 aka I Equal Zero)"	"ALL"	""
	"TP Baseline Fraction"	""	"0.01"	"Testpulse baseline fraction: Fraction of the full test pulse length used for baseline. Proportional to test pulse repeat frequency f = ???. \r\rSee also https://alleninstitute.github.io/MIES/CalculateTPLikePropsFromSweep.html"	"INDEP"	""
	"TP Amplitude VC"	"pA"	"-"	"Testpulse Amplitude: Current injected during testpulse"	"DEPEND"	"VC"
	"TP Amplitude IC"	"mV"	"-"	"Testpulse Amplitude: Applied potential relative to the holding potential of the amplifier.\r\rSee also https://alleninstitute.github.io/MIES/CalculateTPLikePropsFromSweep.html."	"DEPEND"	"IC;I=0"
	"TP Pulse Duration"	"ms"	"-"	"Duration of the applied testpulse without baseline.\r\rSee also https://alleninstitute.github.io/MIES/CalculateTPLikePropsFromSweep.html."	"INDEP"	""
	"Stim Scale Factor"	""	".0001"	"Scalar applied to the stimulus set at acquisition time."	"ALL"	""
	"DA Gain"	""	".000001"	"Digital Analog amplifier gain: Termed external command sensitivity in the Multiclamp Commander.\r\rFor theoretical details see the MultiClamp700B Manual."	"ALL"	""
	"AD Gain"	""	".000001"	"Analog digital amplifier gain for current and voltag clamp.\r\r\rFor theoretical details see the MultiClamp700B Manual."	"ALL"	""
	"Set Sweep Count"	""	"0.1"	"Non-negative sweep (timeseries)  index for the stimulus set."	"ALL"	""
	"TP Insert Checkbox"	"On/Off"	"-"	"Inserted Testpulse:"	"INDEP"	""
	"Inter-trial interval"	"s"	"0.01"	"Target interval for consecutive sweeps, start to start, in seconds"	"INDEP"	""
	"Inter-trial interval (effective)"	"s"	"-"	"Realized interval for consecutive sweeps, start to start, in seconds including repurposed time"	"INDEP"	""
	"TTL rack zero bits"	"bit mask"	"-"	"ITC hardware specific: Bit mask for active DAEphys TTL channels of rack zero.\r\rSee also https://alleninstitute.github.io/MIES/file/_m_i_e_s___mies_utilities_8ipf.html?highlight=getttlbits#_CPPv310GetTTLBits4wave8variable8variable and https://alleninstitute.github.io/MIES/file/_m_i_e_s___mies_utilities_8ipf.html?highlight=getttlstimsets#_CPPv314GetTTLStimSets4wave4wave8variable."	"INDEP"	""
	"TTL rack one bits"	"bit mask"	"-"	"ITC hardware specific: Bit mask for active DAEphys TTL channels of rack one.\r\rSee also https://alleninstitute.github.io/MIES/file/_m_i_e_s___mies_utilities_8ipf.html?highlight=getttlbits#_CPPv310GetTTLBits4wave8variable8variable and https://alleninstitute.github.io/MIES/file/_m_i_e_s___mies_utilities_8ipf.html?highlight=getttlstimsets#_CPPv314GetTTLStimSets4wave4wave8variable."	"INDEP"	""
	"TTL rack zero channel"	""	"-"	"ITC hardware specific: ITC XOP TTL hardware channel for rack zero, e.g., ITC 1600 = 0, ITC 18USB = 1"	"INDEP"	""
	"TTL rack one channel"	""	"-"	"ITC hardware specific: ITC XOP TTL hardware channel for rack one, e.g., ITC 1600 = 3. Of the ITC devices, only the ITC1600 can have up to two racks."	"INDEP"	""
	"Delay onset user"	"ms"	"1"	"User defined delay of stimset onset in milliseconds across all active channels. Occurs immediately after an optionally inserted testpulse. Output is constant zero during the delay.\r\rSee https://alleninstitute.github.io/MIES/#id2 for a visualization of the sweep delays during data acquisition."	"INDEP"	""
	"Delay onset auto"	"ms"	"1"	"Automatically defined delay in milliseconds due to the testpulse (optionally) inserted at sweep onset.\r\rSee https://alleninstitute.github.io/MIES/#id2 for a visualization of the sweep delays during data acquisition."	"INDEP"	""
	"Delay termination"	"ms"	"1"	"User defined delay of sweep termination in milliseconds across all active channels. Occurs immediately after stimulus set termination. Output is constant zero during the delay.\r\rSee https://alleninstitute.github.io/MIES/#id2 for a visualization of the sweep delays during data acquisition."	"INDEP"	""
	"Delay distributed DAQ"	"ms"	"1"	"Distributed data acquisition distributes in time the selected stimsets across all active channels in a single sweep. The delay is the time in milliseconds between stimsets on each active channel.\r\rSee https://alleninstitute.github.io/MIES/index.html#id3 for visualization of the delay."	"INDEP"	""
	"Distributed DAQ"	"On/Off"	"-"	"Distributed data acquisition distributes in time the selected stimsets across all active channels in a single sweep.\r\rSee https://alleninstitute.github.io/MIES/index.html#id3 for visualization of the delay."	"INDEP"	""
	"Repeat Sets"	""	"1"	"User defined value that sets the minimum number of times a stimulus set is acquired within a repeated acquisition cycle.\r\rSee https://alleninstitute.github.io/MIES/index.html#id1 for a visualization of set repetition and indexing."	"INDEP"	""
	"Scaling zero"	"On/Off"	"-"	"The DA scaling for active channels is set to zero after the stimulus set has cycled once. Only applies with locked indexing.\r\rSee https://alleninstitute.github.io/MIES/index.html#id1 for a visualization of scaling to zero."	"INDEP"	""
	"Indexing"	"On/Off"	"-"	"Enables the acquisition of multiple stimulus sets, for an active channel, on a single repeated acquisition cycle.\r\r\rSee https://alleninstitute.github.io/MIES/index.html#id1 for a visualization of indexing."	"INDEP"	""
	"Locked indexing"	"On/Off"	"-"	"Enables the acquisition of multiple stimulus sets, for an active channel, on a single repeated acquisition cycle.\rA special form of  indexing where the transition to the next stimulus set happens on the same sweep for all active channels.\r\rSee https://alleninstitute.github.io/MIES/index.html#id1 for a visualisation of indexing."	"INDEP"	""
	"Repeated Acquisition"	"On/Off"	"-"	"Automated acquisition of more than one sweep.\r\rSee https://alleninstitute.github.io/MIES/index.html#id1 for a visualization of repeated acquisition."	"INDEP"	""
	"Random Repeated Acquisition"	"On/Off"	"-"	"Randomizes the sweep acquisition order within a stimulus set.\r\rSee https://alleninstitute.github.io/MIES/index.html#id1 for a visualization of indexing."	"INDEP"	""
	"Sampling interval DA"	"ms"	"1"	"Time interval between consecutive DA data points."	"INDEP"	""
	"Sampling interval AD"	"ms"	"1"	"Time interval between consecutive AD data points."	"INDEP"	""
	"Sampling interval TTL"	"ms"	"1"	"Time interval between consecutive TTL data points."	"INDEP"	""
	"Sampling interval multiplier"	""	"0.1"	"The hardware limited minimum interval between consecutive data points is called the minimum sampling interval.\rThis interval can be prolonged by the user configured sampling interval multiplier."	"INDEP"	""
	"Stim set length"	""	"0.1"	"Number of points in each sweep of the stimulus set. This is determined by the acquisition sampling interval."	"ALL"	""
	"oodDAQ Pre Feature"	"ms"	"1"	"oodDAQ pre delay is the leading time envelope for non-zero parts of the stimulus set sweeps.\r\rSee https://alleninstitute.github.io/MIES/#id4 for a visualization of oodDAQ."	"INDEP"	""
	"oodDAQ Post Feature"	"ms"	"1"	"oodDAQ post delay is the trailing time envelope for non-zero parts of the stimulus set sweeps.\r\rSee https://alleninstitute.github.io/MIES/#id4 for a visualization of oodDAQ."	"INDEP"	""
	"oodDAQ Resolution"	"ms"	"1"	"The minimum search step for the oodDAQ time offset calculation.\r\rSee https://alleninstitute.github.io/MIES/#id4 for a visualization of oodDAQ."	"INDEP"	""
	"Optimized Overlap dDAQ"	"On/Off"	"-"	"Optimized overlap distributed data acquisition (oodDAQ) offsets in time stimulus set sweeps across headstages. The offset is determined such that the non-zero parts, plus user defined envelope (pre and post delay),  of the stimset sweeps don't overlap on different headstages.\r\rSee https://alleninstitute.github.io/MIES/#id4 for a visualisation of oodDAQ."	"INDEP"	""
	"Delay onset oodDAQ"	"ms"	"1"	"Calculated total oodDAQ offset used for acquisition.\r\rSee https://alleninstitute.github.io/MIES/#id4 for a visualization of oodDAQ."	"DEPEND"	""
	"Pulse To Pulse Length"	"ms"	"1"	"Not used in newer MIES versions."	"ALL"	""
	"Repeated Acq Cycle ID"	""	"1"	"The \"Repeated Acq Cycle ID\" labels each repeated acquisition with a unique integer number.\rSweeps belonging to the same repeated acquisition cycle have the same ID.\rFor yoked devices the follower and lead devices will have the same ID,\rwhich also helps in that case to group sweeps together."	"INDEP"	""
	"Stim Wave Checksum"	""	"1"	"The \"Stim Wave Checksum\" is a unique identifier for the stimulus set contents.\r\rChanges in this ID catches cases where the stimset has the same name but different contents."	"DEPEND"	""
	"Multi Device mode"	"On/Off"	"-"	"Support for multiple DAQ devices acquiring data simultaneously. When turned off, legacy single device mode is used."	"INDEP"	""
	"Background Testpulse"	"On/Off"	"-"	"When enabled, a running testpulse does not block the Igor Pro user interface."	"INDEP"	""
	"Background DAQ"	"On/Off"	"-"	"When enabled, data acquisition does not block the Igor Pro user interface."	"INDEP"	""
	"TP buffer size"	""	"0.1"	"Size of the running average window for the testpulse results."	"INDEP"	""
	"TP during ITI"	"On/Off"	"-"	"When checked the testpulse runs during the inter-trial-interval."	"INDEP"	""
	"Amplifier change via I=0"	"On/Off"	"-"	"Switching between voltage and current clamp passes through I=0 mode if enabled.\r\rFor theoretical details see the MultiClamp700B Manual."	"INDEP"	""
	"Skip analysis functions"	"On/Off"	"-"	"Analysis functions attached to stimulus sets are not called when enabled."	"INDEP"	""
	"Repeat sweep on async alarm"	"On/Off"	"-"	"When an asynchronous' channel alarm is triggered (user configurable) the last sweep is continuously reacquired until the alarm state is cleared."	"INDEP"	""
	"TP after DAQ"	"On/Off"	"-"	"Run the testpulse immediately after data acquisition finished or was stopped prematurely."	"INDEP"	""
	"Set Cycle Count"	""	"1"	"The number of stimulus set repetitions in one repeated acquisition cycle."	"DEPEND"	""
	"Stimset Acq Cycle ID"	""	"1"	" This identifier changes if one of the following properties change:\r  - Repeated acquisition cycle ID\r  - Stimulus set\r  - Stimulus set checksum\r  - Stimulus set cycle count\r\rThe primary use case is for querying all labnotebook entries of all sweeps from the current set.\rIn analysis function terms all sweeps which are acquired between pre set event and post set event, see\ralso https://alleninstitute.github.io/MIES/file/_m_i_e_s___analysis_functions_8ipf.html.\r\rA visualisation is available at https://alleninstitute.github.io/MIES/#id1."	"DEPEND"	""
	"DAQ stop reason"	""	"-"	"Documents why data acquisition was stopped."	"INDEP"	""
	"Digitizer Hardware Type"	""	"1"	"Hardware type (integer) of the DAEphys panel digitizer."	"INDEP"	""
	"Fixed frequency acquisition"	"kHz"	"1"	"The sampling frequency of the digitizer in kHz when fixed frequency acquisition is enabled."	"INDEP"	""
	"Igor Pro bitness"	""	"-"	"Architecture bitness (32 or 64) of Igor Pro."	"INDEP"	""
	"DA ChannelType"	""	"1"	"Acquisition mode of the given DA channel. Can be one of Testpulse (2), data acquisition (1) or unknown (-1)."	"DEPEND"	""
	"AD ChannelType"	""	"1"	"Acquisition mode of the given AD channel. Can be one of Testpulse (2), data acquisition (1) or unknown (-1)."	"DEPEND"	""
	"oodDAQ member"	"On/Off"	"-"	"Set to one for headstages taking part in oodDAQ, set to zero for TP during DAQ headstages."	"DEPEND"	""
	"V-Clamp Holding Enable"	"On/Off"	"-"	"Enables the holding potential in Voltage Clamp.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"VC"
	"V-Clamp Holding Level"	"mV"	"0.9"	"Holding potential in Voltage Clamp.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"VC"
	"Osc Killer Enable"	"On/Off"	"-"	"Disables or reduces capacitance neutralization (Current Clamp) or RS compensation (Voltage Clamp) when oscillations are detected.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC;VC"
	"RsComp Bandwidth"	"Hz"	"0.9"	"The lowpass filter cutoff frequency of the series compensation signal.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"VC"
	"RsComp Correction"	"%"	"0.9"	"Percentage of active series resistance compensation applied.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"VC"
	"RsComp Enable"	"On/Off"	"-"	"Compensates the series resistance in voltage clamp.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"VC"
	"RsComp Prediction"	"%"	"0.9"	"Open loop amplification of output current transient.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"VC"
	"Whole Cell Comp Enable"	"On/Off"	"-"	"Voltage clamp whole cell capacitance and resistance compensation.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"VC"
	"Whole Cell Comp Cap"	"pF"	"0.9"	"Voltage clamp capacitance for whole cell compensation.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"VC"
	"Whole Cell Comp Resist"	"MΩ"	"0.9"	"Voltage clamp resistance for whole cell compensation.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"VC"
	"I-Clamp Holding Enable"	"On/Off"	"-"	"Bias current in current clamp.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC"
	"I-Clamp Holding Level"	"pA"	"0.9"	"Bias current level in current clamp.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC"
	"Neut Cap Enabled"	"On/Off"	"-"	"Pipette Capacitance Neutralization.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC"
	"Neut Cap Value"	"pF"	"0.9"	"User defined pipette capacitance.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC"
	"Bridge Bal Enable"	"On/Off"	"-"	"Pipette series resistance bridge balance.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC"
	"Bridge Bal Value"	"MΩ"	"0.9"	"User defined pipette series resistance.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC"
	"Serial Number"	""	"-"	"Vendor defined amplifier serial number. More than one headstage can share one amplifier.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC;VC;I=0"
	"Channel ID"	""	"-"	"Amplifier headstage channel. Unique for each headstage of a given amplifier.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC;VC;I=0"
	"ComPort ID"	""	"-"	"Always -1 for 700B amplifiers."	"DEPEND"	"IC;VC;I=0"
	"AxoBus ID"	""	"-"	"Always -1 for 700B amplifiers."	"DEPEND"	"IC;VC;I=0"
	"Operating Mode"	""	"-"	"Clamp mode of the headstage."	"DEPEND"	"IC;VC;I=0"
	"Scaled Out Signal"	""	"-"	"Type of output signal:\r\r- Membrane Current\r- Membrane Potential\r- Pipette Potential \r- 100x AC Membrane Potential\r- External Command Potential\r- Auxiliary 1 Potential\r- Auxiliary 2 Current"	"DEPEND"	"IC;VC;I=0"
	"Alpha"	""	"-"	"Output gain for primary output signal."	"DEPEND"	"IC;VC;I=0"
	"Scale Factor"	""	"-"	"Gain scale factor (for Alpha == 1) of primary output signal\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC;VC;I=0"
	"Scale Factor Units"	""	"-"	"Units of the scaled output signal\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC;VC;I=0"
	"LPF Cutoff"	""	"-"	"Primary output low pass filter cut off value (Bessel)\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC;VC;I=0"
	"Membrane Cap"	"pF"	"0.9"	"User configured whole cell membrane capacitance.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"VC"
	"Ext Cmd Sens"	""	"-"	"Scaling between the external command voltage sent to the COMMAND input BNCs on the amplifier front panel, and voltage or current steps delivered to the cell.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC;VC"
	"Raw Out Signal"	""	"-"	"User configured signal type of secondary output\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC;VC;I=0"
	"Raw Scale Factor"	""	"-"	"Gain scale factor (for Alpha == 1) of secondary output signal.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC;VC;I=0"
	"Raw Scale Factor Units"	""	"-"	"Number denoting the unit of the Raw Scale Factor.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC;VC;I=0"
	"Hardware Type"	""	"-"	"Identifier of the amplifier hardware, will be 1 for the 700B. A string version is available in the textual labnotebook as \"HardwareTypeString\".\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC;VC;I=0"
	"Secondary Alpha"	""	"-"	"Output gain for secondary output\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC;VC;I=0"
	"Secondary LPF Cutoff"	""	"-"	"Secondary output lowpass filter cutoff frequency, in Hz.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC;VC;I=0"
	"Series Resistance"	"MΩ"	"-"	"Measured series resistance\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC;VC;I=0"
	"Pipette Offset"	"mV"	"0.1"	"Removes the differential voltage between the ground and the pipette.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC;VC;I=0"
	"Slow current injection"	"On/Off"	"-"	"Varies holding level to hit a certain voltage.\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC"
	"Slow current injection level"	"V"	"0.1"	"Holding level for \"Slow current injection\".\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC"
	"Slow current injection settling time"	"s"	"-"	"Time constant for \"Slow current injection\".\r\rFor more details see the MultiClamp700B Manual."	"DEPEND"	"IC"
	"Autobias Vcom"	"mV"	"0.1"	"During the inter trial interval (\"ITI\") autobias adjusts the holding current to maintain the user defined \"Autobias Vcom\" within \"Autobias Vcom variance\". The autobias evaluates a user defined part (\"Autobias (%)\") of the Testpulse baseline at the \"Autobias Interval\" (DaEphys->Settings->Amplifier)."	"DEPEND"	"IC"
	"Autobias Vcom variance"	"mV"	"0.1"	"During the inter trial interval (\"ITI\") autobias adjusts the holding current to maintain the user defined \"Autobias Vcom\" within \"Autobias Vcom variance\". The autobias evaluates a user defined part (\"Autobias (%)\") of the Testpulse baseline at the \"Autobias Interval\" (DaEphys->Settings->Amplifier)."	"DEPEND"	"IC"
	"Autobias Ibias max"	"pA"	"0.1"	"During the inter trial interval (\"ITI\") autobias adjusts the holding current to maintain the user defined \"Autobias Vcom\" within \"Autobias Vcom variance\". The autobias evaluates a user defined part (\"Autobias (%)\") of the Testpulse baseline at the \"Autobias Interval\" (DaEphys->Settings->Amplifier)."	"DEPEND"	"IC"
	"Autobias Interval"	"s"	"0.1"	"During the inter trial interval (\"ITI\") autobias adjusts the holding current to maintain the user defined \"Autobias Vcom\" within \"Autobias Vcom variance\". The autobias evaluates a user defined part (\"Autobias (%)\") of the Testpulse baseline at the \"Autobias Interval\" (DaEphys->Settings->Amplifier)."	"INDEP"	"IC"
	"Autobias %"	""	"0.1"	"During the inter trial interval (\"ITI\") autobias adjusts the holding current to maintain the user defined \"Autobias Vcom\" within \"Autobias Vcom variance\". The autobias evaluates a user defined part (\"Autobias (%)\") of the Testpulse baseline at the \"Autobias Interval\" (DaEphys->Settings->Amplifier)."	"INDEP"	"IC"
	"Autobias"	"On/Off"	"-"	"During the inter trial interval (\"ITI\") autobias adjusts the holding current to maintain the user defined \"Autobias Vcom\" within \"Autobias Vcom variance\". The autobias evaluates a user defined part (\"Autobias (%)\") of the Testpulse baseline at the \"Autobias Interval\" (DaEphys->Settings->Amplifier)."	"DEPEND"	"IC"
	"Sweep Rollback"	""	"0.1"	"Sweep rollback allows to remove existing sweeps by decreasing the device sweep counter. This entry documents that sweep rollback has happened and the new target sweep number. (removed)"	"INDEP"	""
	"Skip Sweeps"	""	"0.1"	"Whenever the user issues a \"Skip Sweeps\" command this entry documents the new and to be jumped to sweep number."	"INDEP"	""
	"TP power spectrum"	"On/Off"	"-"	"Instead of the Testpulse the power spectrum is displayed/saved during TP and TP during ITI"	"INDEP"	""
	"Async 0 On/Off"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async 1 On/Off"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async 2 On/Off"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async 3 On/Off"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async 4 On/Off"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async 5 On/Off"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async 6 On/Off"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async 7 On/Off"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async 0 Gain"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async 1 Gain"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async 2 Gain"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async 3 Gain"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async 4 Gain"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async 5 Gain"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async 6 Gain"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async 7 Gain"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 0 On/Off"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 1 On/Off"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 2 On/Off"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 3 On/Off"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 4 On/Off"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 5 On/Off"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 6 On/Off"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 7 On/Off"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 0 Min"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 1 Min"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 2 Min"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 3 Min"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 4 Min"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 5 Min"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 6 Min"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 7 Min"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm  0 Max"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm  1 Max"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm  2 Max"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm  3 Max"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm  4 Max"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm  5 Max"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm  6 Max"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm  7 Max"	""	".001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 0 State"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 1 State"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 2 State"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 3 State"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 4 State"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 5 State"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 6 State"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async Alarm 7 State"	"On/Off"	"-"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async AD 0 [Set Temperature]"	"degC"	"0"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async AD 1 [Bath Temperature]"	"degC"	"17.5"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async AD 2"	""	".0001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async AD 3"	""	".0001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async AD 4"	""	".0001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async AD 5"	""	".0001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async AD 6"	""	".0001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"Async AD 7"	""	".0001"	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"INDEP"	"IC;VC;I=0"
	"TP Auto"	"On/Off"	"-"	"Automatic adjustment of testpulse baeline fraction and IC amplitude"	"DEPEND"	"IC"
	"TP Auto max current"	"pA"	"0.1"	"Maximum allowed current for automatic testpulse"	"DEPEND"	"IC"
	"TP Auto voltage"	"mV"	"0.1"	"Target voltage of the pulse"	"DEPEND"	"IC"
	"TP Auto voltage range"	"mV"	"0.1"	"Acceptable deviation from the set voltage to the measured voltage"	"DEPEND"	"IC"
	"TP Auto percentage"	"%"	"1"	"Scaling factor for the amplitude adjustment"	"INDEP"	"IC"
	"TP Auto interval"	"s"	"0.1"	"Interval how often to try tuning the Auto testpulse parameters"	"INDEP"	"IC"
	"TP Auto QC"	"On/Off"	"-"	"Determines if the desired auto testpulse propertes were reached or not."	"DEPEND"	"IC"
	"TP Cycle ID"	""	"1"	"An arbitrary but unique number where all testpulse from the same run have the same ID. \"Fast\" testpulse restarting is considered to be the same run."	"INDEP"	"IC;VC;I=0"
	"Minimum TP resistance for tolerance"	"MΩ"	"1"	"Testpulse resistance values which differ more than this value from their value on the last TP run are documented in the sweep wave note."	"INDEP"	"IC;VC;I=0"
	"Send TP settings to all headstages"	"On/Off"	"-"	"GUI control for headstage dependent testpulse settings."	"INDEP"	"IC;VC;I=0"
	"Epochs version"	""	"1"	"Version number of the stored epoch information."	"INDEP"	"IC;VC;I=0"
	"Get/Set Inter-trial interval"	"On/Off"	"-"	"Determines if the ITI is readout from the stimset in each sweep or the ITI from GUI control is used."	"INDEP"	"IC;VC;I=0"
	"Double precision data"	"On/Off"	"-"	"Stored data is stored with double (ON) or single precision (OFF)."	"INDEP"	"IC;VC;I=0"
	"Save amplifier settings"	"On/Off"	"-"	"ON if amplifier settings should be stored, OFF if not."	"INDEP"	"IC;VC;I=0"
	"Require amplifier"	"On/Off"	"-"	"ON if data acquisition was done with an amplifier, OFF if not."	"INDEP"	"IC;VC;I=0"
	"Skip Ahead"	""	"1"	"Determines how many sweeps are skipped from the stimset whan starting data acquisition."	"INDEP"	"IC;VC;I=0"
	"Skip Sweeps source"	""	"0.1"	"Stores who is responsible for sweep skipping. Current values are 0x1 for the user and 0x2 for automatic/internal reasons."	"INDEP"	"IC;VC;I=0"
	"ADC Configuration bits"	""	"0.1"	"Supported bits (1: RSE, 2: NRSE, 4: Diff, 8: Pseudo-Diff)"	"INDEP"	"IC;VC;I=0"
END
X SetScale/P x 0,1,"", labnotebook_numerical_description; SetScale/P y 0,1,"", labnotebook_numerical_description; SetScale d 0,0,"", labnotebook_numerical_description
X Note labnotebook_numerical_description, "WAVE_LAYOUT_VERSION:2;"
