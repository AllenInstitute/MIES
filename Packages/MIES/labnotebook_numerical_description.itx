IGOR
WAVES/T/N=(6,166)	labnotebook_numerical_description
BEGIN
	"SweepNum"	"TimeStamp"	"TimeStampSinceIgorEpochUTC"	"EntrySourceType"	"AcquisitionState"	"TP Baseline Vm"	"TP Baseline pA"	"TP Peak Resistance"	"TP Steady State Resistance"	"Fast compensation capacitance"	"Slow compensation capacitance"	"Fast compensation time"	"Slow compensation time"	"Headstage Active"	"DAC"	"ADC"	"Clamp Mode"	"TP Baseline Fraction"	"TP Amplitude VC"	"TP Amplitude IC"	"TP Pulse Duration"	"Stim Scale Factor"	"DA Gain"	"AD Gain"	"Set Sweep Count"	"TP Insert Checkbox"	"Inter-trial interval"	"TTL rack zero bits"	"TTL rack one bits"	"TTL rack zero channel"	"TTL rack one channel"	"Delay onset user"	"Delay onset auto"	"Delay termination"	"Delay distributed DAQ"	"Distributed DAQ"	"Repeat Sets"	"Scaling zero"	"Indexing"	"Locked indexing"	"Repeated Acquisition"	"Random Repeated Acquisition"	"Sampling interval"	"Sampling interval multiplier"	"Stim set length"	"oodDAQ Pre Feature"	"oodDAQ Post Feature"	"oodDAQ Resolution"	"Optimized Overlap dDAQ"	"Delay onset oodDAQ"	"Pulse To Pulse Length"	"Repeated Acq Cycle ID"	"Stim Wave Checksum"	"Multi Device mode"	"Background Testpulse"	"Background DAQ"	"TP buffer size"	"TP during ITI"	"Amplifier change via I=0"	"Skip analysis functions"	"Repeat sweep on async alarm"	"TP after DAQ"	"Set Cycle Count"	"Stimset Acq Cycle ID"	"DAQ stop reason"	"Digitizer Hardware Type"	"Fixed frequency acquisition"	"Igor Pro bitness"	"DA ChannelType"	"AD ChannelType"	"oodDAQ member"	"V-Clamp Holding Enable"	"V-Clamp Holding Level"	"Osc Killer Enable"	"RsComp Bandwidth"	"RsComp Correction"	"RsComp Enable"	"RsComp Prediction"	"Whole Cell Comp Enable"	"Whole Cell Comp Cap"	"Whole Cell Comp Resist"	"I-Clamp Holding Enable"	"I-Clamp Holding Level"	"Neut Cap Enabled"	"Neut Cap Value"	"Bridge Bal Enable"	"Bridge Bal Value"	"Serial Number"	"Channel ID"	"ComPort ID"	"AxoBus ID"	"Operating Mode"	"Scaled Out Signal"	"Alpha"	"Scale Factor"	"Scale Factor Units"	"LPF Cutoff"	"Membrane Cap"	"Ext Cmd Sens"	"Raw Out Signal"	"Raw Scale Factor"	"Raw Scale Factor Units"	"Hardware Type"	"Secondary Alpha"	"Secondary LPF Cutoff"	"Series Resistance"	"Pipette Offset"	"Slow current injection"	"Slow current injection level"	"Slow current injection settling time"	"Autobias Vcom"	"Autobias Vcom variance"	"Autobias Ibias max"	"Autobias Interval"	"Autobias %"	"Autobias"	"Sweep Rollback"	"Skip Sweeps"	"Async 0 On/Off"	"Async 1 On/Off"	"Async 2 On/Off"	"Async 3 On/Off"	"Async 4 On/Off"	"Async 5 On/Off"	"Async 6 On/Off"	"Async 7 On/Off"	"Async 0 Gain"	"Async 1 Gain"	"Async 2 Gain"	"Async 3 Gain"	"Async 4 Gain"	"Async 5 Gain"	"Async 6 Gain"	"Async 7 Gain"	"Async Alarm 0 On/Off"	"Async Alarm 1 On/Off"	"Async Alarm 2 On/Off"	"Async Alarm 3 On/Off"	"Async Alarm 4 On/Off"	"Async Alarm 5 On/Off"	"Async Alarm 6 On/Off"	"Async Alarm 7 On/Off"	"Async Alarm 0 Min"	"Async Alarm 1 Min"	"Async Alarm 2 Min"	"Async Alarm 3 Min"	"Async Alarm 4 Min"	"Async Alarm 5 Min"	"Async Alarm 6 Min"	"Async Alarm 7 Min"	"Async Alarm  0 Max"	"Async Alarm  1 Max"	"Async Alarm  2 Max"	"Async Alarm  3 Max"	"Async Alarm  4 Max"	"Async Alarm  5 Max"	"Async Alarm  6 Max"	"Async Alarm  7 Max"	"Async AD 0: Set Temperature"	"Async AD 1: Bath Temperature"	"Async AD 2"	"Async AD 3"	"Async AD 4"	"Async AD 5"	"Async AD 6"	"Async AD 7"
	""	"s"	"s"	""	""	"mV"	"pA"	"MOhm"	"MOhm"	"F"	"F"	"s"	"s"	"On/Off"	""	""	""	""	""	""	"ms"	""	""	""	""	"On/Off"	"s"	"bit mask"	"bit mask"	""	""	"ms"	"ms"	"ms"	"ms"	"On/Off"	""	"On/Off"	"On/Off"	"On/Off"	"On/Off"	"On/Off"	"ms"	""	""	"ms"	"ms"	"ms"	"On/Off"	"ms"	"ms"	"id"	"id"	"On/Off"	"On/Off"	"On/Off"	""	"On/Off"	"On/Off"	"On/Off"	"On/Off"	"On/Off"	""	"id"	""	""	"kHz"	""	""	""	"On/Off"	"On/Off"	"mV"	"On/Off"	"Hz"	"%"	"On/Off"	"%"	"On/Off"	"pF"	"MOhm"	"On/Off"	"pA"	"On/Off"	"pF"	"On/Off"	"MOhm"	""	""	""	""	""	""	""	""	""	""	"pF"	""	""	""	""	""	""	""	"MOhm"	"mV"	"On/Off"	"V"	"s"	"mV"	"mV"	"pA"	"s"	""	"On/Off"	""	""	"On/Off"	"On/Off"	"On/Off"	"On/Off"	"On/Off"	"On/Off"	"On/Off"	"On/Off"	""	""	""	""	""	""	""	""	"On/Off"	"On/Off"	"On/Off"	"On/Off"	"On/Off"	"On/Off"	"On/Off"	"On/Off"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	"degC"	"degC"	""	""	""	""	""	""
	"-"	"-"	"-"	"-"	"-"	"1"	"50"	"1"	"1"	"1e-12"	"1e-12"	"1e-6"	"1e-6"	"-"	"0.1"	"0.1"	"-"	"0.01"	"-"	"-"	"-"	".0001"	".000001"	".000001"	"0.1"	"-"	"0.01"	"-"	"-"	"-"	"-"	"1"	"1"	"1"	"1"	"-"	"1"	"-"	"-"	"-"	"-"	"-"	"1"	"0.1"	"0.1"	"1"	"1"	"1"	"-"	"1"	"1"	"1"	"1"	"-"	"-"	"-"	"0.1"	"-"	"-"	"-"	"-"	"-"	"1"	"1"	"-"	"1"	"1"	"-"	"1"	"1"	"-"	"-"	"0.9"	"-"	"0.9"	"0.9"	"-"	"0.9"	"-"	"0.9"	"0.9"	"-"	"0.9"	"-"	"0.9"	"-"	"0.9"	"-"	"-"	"-"	"-"	"-"	"-"	"-"	"-"	"-"	"-"	"0.9"	"-"	"-"	"-"	"-"	"-"	"-"	"-"	"-"	"0.1"	"-"	"0.1"	"-"	"0.1"	"0.1"	"0.1"	"0.1"	"0.1"	"-"	"0.1"	"0.1"	"-"	"-"	"-"	"-"	"-"	"-"	"-"	"-"	".001"	".001"	".001"	".001"	".001"	".001"	".001"	".001"	"-"	"-"	"-"	"-"	"-"	"-"	"-"	"-"	".001"	".001"	".001"	".001"	".001"	".001"	".001"	".001"	".001"	".001"	".001"	".001"	".001"	".001"	".001"	".001"	"0"	"17.5"	".0001"	".0001"	".0001"	".0001"	".0001"	".0001"
	"Sweep number: Non-repeating non-negative numeric identifier for sweep time series. Increments in the order of acquisition. Starts at zero."	"Time Stamp: Seconds since Igor epoch (1/1/1904) in local time zone with millisecond precision. Written at time of labnotebook entry."	"Time Stamp: Seconds since Igor epoch (1/1/1904) in coordinated universal time zone (UTC) with millisecond precision. Written at time of labnotebook entry."	"Entry source type: type of the labnotebook entry, 0 for data acquisition, 1 for test pulse, NaN for all other types including user entries.\r"	"Stores the current numbered state of data acquistion."	"Testpulse Baseline: Average membrane potential, see https://alleninstitute.github.io/MIES/CalculateTPLikePropsFromSweep.html"	"Testpulse Baseline: Average holding current, see https://alleninstitute.github.io/MIES/CalculateTPLikePropsFromSweep.html"	"Testpulse Peak Resistance: Instantaneous resistance measurement calculated from testpulse profil, https://alleninstitute.github.io/MIES/CalculateTPLikePropsFromSweep.html"	"Testpulse Steady State Resistance: Resistance measurement obtained from the end of the applied testpulse profile, see https://alleninstitute.github.io/MIES/CalculateTPLikePropsFromSweep.html"	"Fast capacitance compensation: Cp Fast sets the parameters of current injected into the headstage atvoltage steps to charge (and discharge) the fast component of electrodecapacitance. The adjustable fields display estimates of the magnitudeand time constant for this capacitance.\r\rFor theoretical details see the MultiClamp700B Manual."	"Slow capacitance compensation: Settings for Cp Slow determine the parameters of current injected intothe headstage at voltage steps to charge and discharge the slow componentof electrode capacitance. The adjustable fields display estimates of themagnitude and time constant for this capacitance.\r\rFor theoretical details see the MultiClamp700B Manual."	"Fast compensation time: Time constant for Fast compensation\r\rFor theoretical details see the MultiClamp700B Manual."	"Slow compensation time: Time constant for slow compensation\r\rFor theoretical details see the MultiClamp700B Manual."	"Headtage Active State: Specifies if the hardware associated with the headstage is in use."	"Digital Analog Channel used for testpulse or data acquisition"	"Analog digital channel used for testpulse or data acquisition"	"Amplifier clamp state: One of 0 (VC aka Voltage Clamp), 1 (IC aka Current Clamp), 2 (I=0 aka I Equal Zero)"	"Testpulse baseline fraction: Fraction of the full test pulse length used for baseline. Proportional to test pulse repeat frequency f = ???. \r\rSee also https://alleninstitute.github.io/MIES/CalculateTPLikePropsFromSweep.html"	"Testpulse Amplitude: Current injected during testpulse"	"Testpulse Amplitude: Applied potential relative to the holding potential of the amplifier.\r\rSee also https://alleninstitute.github.io/MIES/CalculateTPLikePropsFromSweep.html."	"Duration of the applied testpulse without baseline.\r\rSee also https://alleninstitute.github.io/MIES/CalculateTPLikePropsFromSweep.html."	"Scalar applied to the stimulus set at acquisition time."	"Digital Analog amplifier gain: Termed external command sensitivity in the Multiclamp Commander.\r\rFor theoretical details see the MultiClamp700B Manual."	"Analog digital amplifier gain for current and voltag clamp.\r\r\rFor theoretical details see the MultiClamp700B Manual."	"Non-negative sweep (timeseries)  index for the stimulus set."	"Inserted Testpulse:"	"Target interval for consecutive sweeps, start to start, in seconds"	"ITC hardware specific: Bit mask for active DAEphys TTL channels of rack zero.\r\rSee also https://alleninstitute.github.io/MIES/file/_m_i_e_s___mies_utilities_8ipf.html?highlight=getttlbits#_CPPv310GetTTLBits4wave8variable8variable and https://alleninstitute.github.io/MIES/file/_m_i_e_s___mies_utilities_8ipf.html?highlight=getttlstimsets#_CPPv314GetTTLStimSets4wave4wave8variable."	"ITC hardware specific: Bit mask for active DAEphys TTL channels of rack one.\r\rSee also https://alleninstitute.github.io/MIES/file/_m_i_e_s___mies_utilities_8ipf.html?highlight=getttlbits#_CPPv310GetTTLBits4wave8variable8variable and https://alleninstitute.github.io/MIES/file/_m_i_e_s___mies_utilities_8ipf.html?highlight=getttlstimsets#_CPPv314GetTTLStimSets4wave4wave8variable."	"ITC hardware specific: ITC XOP TTL hardware channel for rack zero, e.g., ITC 1600 = 0, ITC 18USB = 1"	"ITC hardware specific: ITC XOP TTL hardware channel for rack one, e.g., ITC 1600 = 3. Of the ITC devices, only the ITC1600 can have up to two racks."	"User defined delay of stimset onset in milliseconds across all active channels. Occurs immediately after an optionally inserted Testpulse. Output is constant zero during the delay.\r\rSee https://alleninstitute.github.io/MIES/#id2 for a visualization of the sweep delays during data acquisition."	"Automatically defined delay in milliseconds due to the Testpulse (optionally) inserted at sweep onset.\r\rSee https://alleninstitute.github.io/MIES/#id2 for a visualization of the sweep delays during data acquisition."	"User defined delay of sweep termination in milliseconds across all active channels. Occurs immediately after stimulus set termination. Output is constant zero during the delay.\r\rSee https://alleninstitute.github.io/MIES/#id2 for a visualization of the sweep delays during data acquisition."	"Distributed data acquisition distributes in time the selected stimsets across all active channels in a single sweep. The delay is the time in milliseconds between stimsets on each active channel.\r\rSee https://alleninstitute.github.io/MIES/index.html#id3 for visualization of the delay."	"Distributed data acquisition distributes in time the selected stimsets across all active channels in a single sweep.\r\rSee https://alleninstitute.github.io/MIES/index.html#id3 for visualization of the delay."	"User defined value that sets the minimum number of times a stimulus set is acquired within a repeated acquisition cycle.\r\rSee https://alleninstitute.github.io/MIES/index.html#id1 for a visualisation of set repetition and indexing."	"The DA scaling for active channels is set to zero after the stimulus set has cycled once. Only applies with locked indexing.\r\rSee https://alleninstitute.github.io/MIES/index.html#id1 for a visualisation of scaling to zero."	"Enables the acquistion of multiple stimulus sets, for an active channel, on a single repeated acquisition cycle.\r\r\rSee https://alleninstitute.github.io/MIES/index.html#id1 for a visualisation of indexing."	"Enables the acquistion of multiple stimulus sets, for an active channel, on a single repeated acquisition cycle.\rA special form of  indexing where the transition to the next stimulus set happens on the same sweep for all active channels.\r\rSee https://alleninstitute.github.io/MIES/index.html#id1 for a visualisation of indexing."	"Automated acquisition of more than one sweep.\r\rSee https://alleninstitute.github.io/MIES/index.html#id1 for a visualisation of repeated acquisition."	"Randomizes the sweep acquisition order within a stimulus set.\r\rSee https://alleninstitute.github.io/MIES/index.html#id1 for a visualisation of indexing."	"Time interval between consecutive data points."	"The hardware limited minimum interval between consecutive data points is called the minimum sampling interval.\rThis interval can be prolonged by the user configured sampling interval multiplier."	"Number of points in each sweep of the stimulus set. This is determined by the acquisition sampling interval."	"oodDAQ pre delay is the leading time envelope for non-zero parts of the stimulus set sweeps.\r\rSee https://alleninstitute.github.io/MIES/#id4 for a visualisation of oodDAQ."	"oodDAQ post delay is the trailing time envelope for non-zero parts of the stimulus set sweeps.\r\rSee https://alleninstitute.github.io/MIES/#id4 for a visualisation of oodDAQ."	"The minimum search step for the oodDAQ time offset calculation.\r\rSee https://alleninstitute.github.io/MIES/#id4 for a visualisation of oodDAQ."	"Optimized overlap distributed data acquisition (oodDAQ) offsets in time stimulus set sweeps across headstages. The offset is determined such that the non-zero parts, plus user defined envelope (pre and post delay),  of the stimset sweeps don't overlap on different headstages.\r\rSee https://alleninstitute.github.io/MIES/#id4 for a visualisation of oodDAQ."	"Calculated total oodDAQ offset used for acquisition.\r\rSee https://alleninstitute.github.io/MIES/#id4 for a visualisation of oodDAQ."	"Not used in newer MIES versions."	"The \"Repeated Acq Cycle ID\" labels each repeated acquisition with a unique integer number.\rSweeps belonging to the same repeated acquisition cycle have the same ID.\rFor yoked devices the follower and lead devices will have the same ID,\rwhich also helps in that case to group sweeps together."	"The \"Stim Wave Checksum\" is a unique identifier for the stimulus set contents.\r\rChanges in this ID catches cases where the stimset has the same name but different contents."	"Support for multiple DAQ devices acquiring data simultaneously. When turned off, legacy single device mode is used."	"When enabled, a running testpulse does not block the Igor Pro user interface."	"When enabled, data acquisition does not block the Igor Pro user interface."	"Size of the running average window for the testpulse results."	"When checked the testpulse runs during the inter-trial-interval."	"Switching between voltage and current clamp passes through I=0 mode if enabled.\r\rFor theoretical details see the MultiClamp700B Manual."	"Analysis functions attached to simulus sets are not called when enabled."	"When an asynchronous' channel alarm is triggered (user configurable) the last sweep is continously reacquired until the alarm state is cleared."	"Run the testpulse immediately after data acquisition finished or was stopped prematurely."	"The number of stimulus set repetitions in one repeated acquisition cycle."	" This identifier changes if one of the folllowing properties change:\r  - Repeated acquisition cycle ID\r  - Stimulus set\r  - Stimulus set checksum\r  - Stimulus set cycle count\r\rThe primary use case is for querying all labnotebook entries of all sweeps from the current set.\rIn analysis function terms all sweeps which are acquired between pre set event and post set event, see\ralso https://alleninstitute.github.io/MIES/file/_m_i_e_s___analysis_functions_8ipf.html.\r\rA visualisation is available at https://alleninstitute.github.io/MIES/#id1."	"Documents why data acquisition was stopped."	"Hardware type (integer) of the DAEphys panel digitizer."	"The sampling frequency of the digitizer in kHz when fixed frequency acquisition is enabled."	"Architecture bitness (32 or 64) of Igor Pro."	"Acquisition mode of the given DA channel. Can be one of Testpulse (2), data acquisition (1) or unknown (-1)."	"Acquisition mode of the given AD channel. Can be one of Testpulse (2), data acquisition (1) or unknown (-1)."	"Set to one for headstages taking part in oodDAQ, set to zero for TP during DAQ headstages."	"Enables the holding potential in Voltage Clamp.\r\rFor more details see the MultiClamp700B Manual."	"Holding potential in Voltage Clamp.\r\rFor more details see the MultiClamp700B Manual."	"Disables or reduces capacitance neutralization (Current Clamp) or RS compensation (Voltage Clamp) when oscillations are detected.\r\rFor more details see the MultiClamp700B Manual."	"The lowpass filter cutoff frequency of the series compensation signal.\r\rFor more details see the MultiClamp700B Manual."	"Percentage of active series resistance compensation applied.\r\rFor more details see the MultiClamp700B Manual."	"Compensates the series resistance in voltage clamp.\r\rFor more details see the MultiClamp700B Manual."	"Open loop amplification of output current transient.\r\rFor more details see the MultiClamp700B Manual."	"Voltage clamp whole cell capacitance and resistance compensation.\r\rFor more details see the MultiClamp700B Manual."	"Voltage clamp capacitance for whole cell compensation.\r\rFor more details see the MultiClamp700B Manual."	"Voltage clamp resistance for whole cell compensation.\r\rFor more details see the MultiClamp700B Manual."	"Bias current in current clamp.\r\rFor more details see the MultiClamp700B Manual."	"Bias current level in current clamp.\r\rFor more details see the MultiClamp700B Manual."	"Pipette Capacitance Neutralization.\r\rFor more details see the MultiClamp700B Manual."	"User defined pipette capacitance.\r\rFor more details see the MultiClamp700B Manual."	"Pipette series resistance bridge balance.\r\rFor more details see the MultiClamp700B Manual."	"User defined pipette series resistance.\r\rFor more details see the MultiClamp700B Manual."	"Vendor defined amplifier serial number. More than one headstage can share one amplifier.\r\rFor more details see the MultiClamp700B Manual."	"Amplifier headstage channel. Unique for each headstage of a given amplifier.\r\rFor more details see the MultiClamp700B Manual."	"Always -1 for 700B amplifiers."	"Always -1 for 700B amplifiers."	"Clamp mode of the headstage."	"Type of output signal:\r\r- Membrane Current\r- Membrane Potential\r- Pipette Potential \r- 100x AC Membrane Potential\r- External Command Potential\r- Auxiliary 1 Potential\r- Auxiliary 2 Current"	"Output gain for primary output signal."	"Gain scale factor (for Alpha == 1) of primary output signal\r\rFor more details see the MultiClamp700B Manual."	"Units of the scaled output signal\r\rFor more details see the MultiClamp700B Manual."	"Primary output low pass filter cut off value (Bessel)\r\rFor more details see the MultiClamp700B Manual."	"User configured whole cell membrane capacitance.\r\rFor more details see the MultiClamp700B Manual."	"Scaling between the external command voltage sent to the COMMAND input BNCs on the amplifier front panel, and voltage or current steps delivered to the cell.\r\rFor more details see the MultiClamp700B Manual."	"User configured signal type of secondary output\r\rFor more details see the MultiClamp700B Manual."	"Gain scale factor (for Alpha == 1) of secondary output signal.\r\rFor more details see the MultiClamp700B Manual."	"Number denoting the unit of the Raw Scale Factor.\r\rFor more details see the MultiClamp700B Manual."	"Identifier of the amplifier hardware, will be 1 for the 700B. A string version is available in the textual labnotebook as \"HardwareTypeString\".\r\rFor more details see the MultiClamp700B Manual."	"Output gain for secondary output\r\rFor more details see the MultiClamp700B Manual."	"Secondary output lowpass filter cutoff frequency, in Hz.\r\rFor more details see the MultiClamp700B Manual."	"Measured series resistance\r\rFor more details see the MultiClamp700B Manual."	"Removes the differential voltage between the ground and the pipette.\r\rFor more details see the MultiClamp700B Manual."	"Varies holding level to hit a certain voltage.\r\rFor more details see the MultiClamp700B Manual."	"Holding level for \"Slow current injection\".\r\rFor more details see the MultiClamp700B Manual."	"Time constant for \"Slow current injection\".\r\rFor more details see the MultiClamp700B Manual."	"During the inter trial interval (\"ITI\") autobias adjusts the holding current to maintain the user defined \"Autobias Vcom\" within \"Autobias Vcom variance\". The autobias evaluates a user defined part (\"Autobias (%)\") of the Testpulse baseline at the \"Autobias Interval\" (DaEphys->Settings->Amplifier)."	"During the inter trial interval (\"ITI\") autobias adjusts the holding current to maintain the user defined \"Autobias Vcom\" within \"Autobias Vcom variance\". The autobias evaluates a user defined part (\"Autobias (%)\") of the Testpulse baseline at the \"Autobias Interval\" (DaEphys->Settings->Amplifier)."	"During the inter trial interval (\"ITI\") autobias adjusts the holding current to maintain the user defined \"Autobias Vcom\" within \"Autobias Vcom variance\". The autobias evaluates a user defined part (\"Autobias (%)\") of the Testpulse baseline at the \"Autobias Interval\" (DaEphys->Settings->Amplifier)."	"During the inter trial interval (\"ITI\") autobias adjusts the holding current to maintain the user defined \"Autobias Vcom\" within \"Autobias Vcom variance\". The autobias evaluates a user defined part (\"Autobias (%)\") of the Testpulse baseline at the \"Autobias Interval\" (DaEphys->Settings->Amplifier)."	"During the inter trial interval (\"ITI\") autobias adjusts the holding current to maintain the user defined \"Autobias Vcom\" within \"Autobias Vcom variance\". The autobias evaluates a user defined part (\"Autobias (%)\") of the Testpulse baseline at the \"Autobias Interval\" (DaEphys->Settings->Amplifier)."	"During the inter trial interval (\"ITI\") autobias adjusts the holding current to maintain the user defined \"Autobias Vcom\" within \"Autobias Vcom variance\". The autobias evaluates a user defined part (\"Autobias (%)\") of the Testpulse baseline at the \"Autobias Interval\" (DaEphys->Settings->Amplifier)."	"Sweep rollback allows to remove existing sweeps by decreasing the device sweep counter. This entry documents that sweep rollback has happened and the new target sweep number."	"Whenever the user issues a \"Skip Sweeps\" command this entry documents the new and to be jumped to sweep number."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."	"Single AD channel read at the end of the sweep. Commonly used for reading experimental hardware states. From temperature controllers, for example.\r\rAlarm is triggered when enabled and minimum or maximum is exceeded.\r\rThe value is stored in a new labnotebook column called \"Async AD$X: $Name\" where X is the asynchronous channel and $Name the title of the entry."
	"ALL"	"ALL"	"ALL"	"ALL"	"ALL"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"ALL"	"ALL"	"ALL"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"ALL"	"ALL"	"ALL"	"ALL"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"ALL"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"DEPEND"	"ALL"	"INDEP"	"DEPEND"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"DEPEND"	"DEPEND"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"DEPEND"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"	"INDEP"
	""	""	""	""	""	"IC;I=0"	"VC"	""	""	""	""	""	""	""	""	""	""	""	"VC"	"IC;I=0"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	"VC"	"VC"	"IC;VC"	"VC"	"VC"	"VC"	"VC"	"VC"	"VC"	"VC"	"IC"	"IC"	"IC"	"IC"	"IC"	"IC"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"VC"	"VC;IC"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC"	"IC"	"IC"	"IC"	"IC"	"IC"	"IC"	"IC"	"IC"	""	""	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"	"IC;VC;I=0"
END
X SetScale/P x 0,1,"", labnotebook_numerical_description; SetScale/P y 0,1,"", labnotebook_numerical_description; SetScale d 0,0,"", labnotebook_numerical_description
X Note labnotebook_numerical_description, "WAVE_LAYOUT_VERSION:1;"
