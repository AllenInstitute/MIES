digraph G {
    fontname="sans-serif";
    compound="true";
    ratio="0,01";
    center="true";
    penwidth="0.1";
    edge [comment="Wildcard edge",
          fontname="sans-serif",
          fontsize=10,
          colorscheme="blues3",
          color=2,
          fontcolor=3];
    node [fontname="serif",
          fontsize=13,
          fillcolor="1",
          colorscheme="blues4",
          color="2",
          fontcolor="4",
          style="filled"];
    "Start DAQ/RA";
    "Mid Sweep Event";
    "Post DAQ Event";
    "Post Set Event";
    "Post Sweep Event";
    "Prepare DAQ/Pre Set Event";
    "Start DAQ/RA" -> "Mid Sweep Event";
    "Start DAQ/RA" -> "Post DAQ Event";
    "Start DAQ/RA" -> "Prepare DAQ/Pre Set Event";
    "Start DAQ/RA" -> "Post Set Event";
    "Start DAQ/RA" -> "Post Sweep Event";
    subgraph cluster_preDAQ {
        color="invis";
        edge [comment="Wildcard node added automatic in EG."];
        node [comment="Wildcard node added automatic in EG."];
        "Enable \"TP during ITI\"";
        "Enable \"Autobias\"";
        "Enable \"Multidevice DAQ\"";
        "Valid Autobias voltage (finite and non-zero)";
        "Disable \"dDAQ\"/\"oodDAQ\"";
        "Enable \"Repeated Acquisition\"";
        "Enable \"Insert TP\"";
        "Check if no TTL channels are active";
        "All required analysis parameters present?\n DAScale : numeric wave\n OperationMode: string\nSamplingMultiplier: variable";
        "Get OperationMode";
        "Check if only one headstage is active";
        "Stimset is large enough";
        "Check if mode is IC";
        "Prepare DAQ/Pre Set Event" -> "Enable \"Autobias\"";
        "Enable \"Autobias\"" -> "Enable \"TP during ITI\"";
        "Enable \"TP during ITI\"" -> "Enable \"Multidevice DAQ\"";
        "Enable \"Multidevice DAQ\"" -> "Disable \"dDAQ\"/\"oodDAQ\"";
        "Disable \"dDAQ\"/\"oodDAQ\"" -> "Enable \"Repeated Acquisition\"";
        "Enable \"Repeated Acquisition\"" -> "Enable \"Insert TP\"";
        "All checks passed";
        "Prepare DAQ/Pre Set Event" -> "Valid Autobias voltage (finite and non-zero)";
        "Valid Autobias voltage (finite and non-zero)" -> "Check if no TTL channels are active";
        "Check if no TTL channels are active" -> "Stimset is large enough";
        "Stimset is large enough" -> "Check if mode is IC";
        "Check if mode is IC" -> "Check if only one headstage is active";
        "Check if only one headstage is active" -> "All checks passed";
        "Prepare DAQ/Pre Set Event" -> "All required analysis parameters present?\n DAScale : numeric wave\n OperationMode: string\nSamplingMultiplier: variable";
        "All required analysis parameters present?\n DAScale : numeric wave\n OperationMode: string\nSamplingMultiplier: variable" -> "Abort"  [label="No"];
        "All checks passed" -> "Use first DAScale value"  [label="Yes"];
        "All checks passed" -> "Abort"  [label="No"];
        "All required analysis parameters present?\n DAScale : numeric wave\n OperationMode: string\nSamplingMultiplier: variable" -> "Get OperationMode"  [label="Yes"];
        "Look for an existing and passing rheobase sweep\n within a passing set and\n a pulse duration of more than 500ms";
        "Get OperationMode" -> "Look for an existing and passing rheobase sweep\n within a passing set and\n a pulse duration of more than 500ms"  [label="Supra"];
        "Look for an existing and passing rheobase sweep\n within a passing set and\n a pulse duration of more than 500ms" -> "Abort"  [label="Not found"];
        "Use the DAScale value of that sweep\n as offset to the DAScale values from the analysis parameters";
        "Look for an existing and passing rheobase sweep\n within a passing set and\n a pulse duration of more than 500ms" -> "Use the DAScale value of that sweep\n as offset to the DAScale values from the analysis parameters"  [label="Found"];
        "Use the DAScale values\nfrom the analysis parameters";
        "Get OperationMode" -> "Use the DAScale values\nfrom the analysis parameters"  [label="Sub"];
    }

    "Post DAQ Event" -> "Update Dashboard";
    "Mark set as passed if $NUM_DA_SCALES\nsweeps passed, as failure otherwise";
    "Last Sweep passed?";
    "Check if $NUM_DA_SCALES\nsweeps passed from RA cycle";
    "Skip to end of active set";
    "Skip to end";
    "Post Sweep Event" -> "Last Sweep passed?";
    "Check if $NUM_DA_SCALES\nsweeps passed from RA cycle" -> "Skip to end of active set"  [label="Yes"];
    "Use next DAScale value";
    "Check if $NUM_DA_SCALES\nsweeps passed from RA cycle" -> "Use next DAScale value"  [label="No"];
    "Check if the Set can still pass";
    "Last Sweep passed?" -> "Check if the Set can still pass"  [label="No"];
    "Check if the Set can still pass" -> "Skip to end"  [label="No"];
    "Abort";
    "BL QC passed?";
    "Mid Sweep Event" -> "BL QC passed?";
    "Grab next completely acquired chunk\n(500ms) of stimset baseline";
    "BL QC passed?" -> "Grab next completely acquired chunk\n(500ms) of stimset baseline"  [label="No"];
    "Baseline chunk type";
    "Chunk already evaluated?";
    "Grab next completely acquired chunk\n(500ms) of stimset baseline" -> "Chunk already evaluated?"  [label="Have one"];
    "Grab next completely acquired chunk\n(500ms) of stimset baseline" -> "Last chunk?"  [label="None left"];
    "Last chunk?" -> "Mark Sweep as failed"  [label="Yes"];
    "Chunk already evaluated?" -> "Grab next completely acquired chunk\n(500ms) of stimset baseline"  [label="Yes"];
    "Chunk already evaluated?" -> "Baseline chunk type"  [label="No"];
    "Check RMS short";
    "Check RMS long";
    "Check target voltage [1]";
    "Check target voltage [2]";
    "Baseline chunk type" -> "Check RMS short"  [label="pre pulse"];
    "Check RMS short" -> "Check RMS long"  [label="Passed"];
    "Add BL QC passed labnotebook entry";
    "Add BL QC failed labnotebook entry";
    "Check RMS short" -> "Add BL QC failed labnotebook entry"  [label="Failed"];
    "Check RMS long" -> "Add BL QC failed labnotebook entry"  [label="Failed"];
    "Check RMS long" -> "Check target voltage [1]"  [label="Passed"];
    "Mark chunk as passed/failed [1]";
    "Check target voltage [1]" -> "Mark chunk as passed/failed [1]";
    "Mark chunk as passed/failed [1]" -> "Grab next completely acquired chunk\n(500ms) of stimset baseline"  [label="Passed"];
    "Early sweep stop, repurpose ITI and add 10s to ITI";
    "Mark chunk as passed/failed [1]" -> "Early sweep stop, repurpose ITI and add 10s to ITI"  [label="Failed"];
    "Baseline chunk type" -> "Check target voltage [2]"  [label="post pulse"];
    "Check target voltage [2]" -> "Mark chunk as passed/failed [2]";
    "Mark chunk as passed/failed [2]" -> "Grab next completely acquired chunk\n(500ms) of stimset baseline"  [label="Failed"];
    "Mark chunk as passed/failed [2]" -> "Add BL QC passed labnotebook entry"  [label="Passed"];
    "Add BL QC passed labnotebook entry" -> "Early Sweep stop";
    "Add BL QC failed labnotebook entry" -> "Early Sweep stop";
    "Post Set Event" -> "Update Dashboard";
    "Get OperationMode [2]";
    "Get OperationMode [2]" -> "Mark set as passed if $NUM_DA_SCALES\nsweeps passed, as failure otherwise"  [label="Sub"];
    "Post Set Event" -> "Get OperationMode [2]";
    "Optional FinalSlopePercent\nparameter present?";
    "Optional FinalSlopePercent\nparameter present?" -> "Add labnotebook entry if the\ndesired fI-Slope was reached or not"  [label="Yes"];
    "Last Sweep passed?" -> "Get OperationMode [3]"  [label="Yes"];
    "Get OperationMode [3]" -> "Calculate TP-like properties\nand store them in the\nlabnotebook"  [label="Sub"];
    "Calculate TP-like properties\nand store them in the\nlabnotebook" -> "Optional parameter ShowPlot\nis true or missing";
    "Optional parameter ShowPlot\nis true or missing" -> "Plot the resistance (Sub)\nor fI (Supra)"  [label="Yes"];
    "Calculate TP-like properties\nand store them in the\nlabnotebook" -> "Check if $NUM_DA_SCALES\nsweeps passed from RA cycle";
    "Get OperationMode [3]" -> "Search for spikes\n(x range: pulse onset to end of sweep\ny condition: max above 0.01mV)"  [label="Supra"];
    "Search for spikes\n(x range: pulse onset to end of sweep\ny condition: max above 0.01mV)" -> "Write number of spikes\ninto labnotebook";
    "Write number of spikes\ninto labnotebook" -> "Determine pulse duration\nand write it into the labnotebook";
    "Determine pulse duration\nand write it into the labnotebook" -> "Create spike frequency vs DAScale (fI) data\nand peform linear regression";
    "Create spike frequency vs DAScale (fI) data\nand peform linear regression" -> "Optional parameter ShowPlot\nis true or missing";
    "Create spike frequency vs DAScale (fI) data\nand peform linear regression" -> "Write fI-Slope into labnotebook";
    "Get OperationMode [2]" -> "Labnotebook has fI-Slope reached entry?"  [label="Supra"];
    "Labnotebook has fI-Slope reached entry?" -> "Reached?"  [label="Yes"];
    "Reached?" -> "Mark set as passed if $NUM_DA_SCALES\nsweeps passed, as failure otherwise"  [label="Yes"];
    "Reached?" -> "Mark set as failed"  [label="No"];
    "Labnotebook has fI-Slope reached entry?" -> "Mark set as passed if $NUM_DA_SCALES\nsweeps passed, as failure otherwise"  [label="No"];
    "Write fI-Slope into labnotebook" -> "Optional FinalSlopePercent\nparameter present?";
}
