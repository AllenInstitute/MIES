digraph G {
    fontname="sans-serif";
    penwidth="0.1";
    ratio="0,01";
    center="true";
    compound="true";
    edge [comment="Wildcard edge",
          fontname="sans-serif",
          fontsize=10,
          colorscheme="blues3",
          color=2,
          fontcolor=3];
    node [fontname="serif",
          fontsize=13,
          fillcolor="1",
          colorscheme="blues4",
          color="2",
          fontcolor="4",
          style="filled"];
    "Start DAQ/RA";
    "Mid Sweep Event";
    "Start DAQ/RA" -> "Mid Sweep Event";
    "Prepare DAQ Event";
    "Start DAQ/RA" -> "Prepare DAQ Event";
    "Post Set Event";
    "Post Sweep Event";
    "Start DAQ/RA" -> "Post Set Event";
    "Start DAQ/RA" -> "Post Sweep Event";
    "Set \"TP during ITI\"";
    "Enable \"Autobias\"";
    "Enable \"Multidevice DAQ\"";
    "Disable \"dDAQ\"/\"oodDAQ\"";
    "Valid Autobias voltage (finite and non-zero)";
    "Prepare DAQ Event" -> "Enable \"Autobias\"";
    "Prepare DAQ Event" -> "Set \"TP during ITI\"";
    "Prepare DAQ Event" -> "Valid Autobias voltage (finite and non-zero)";
    "Prepare DAQ Event" -> "Enable \"Multidevice DAQ\"";
    "Prepare DAQ Event" -> "Disable \"dDAQ\"/\"oodDAQ\"";
    "All checks passed";
    "Set \"TP during ITI\"";
    "Valid Autobias voltage (finite and non-zero)" -> "All checks passed";
    "Mark set as failed if it has not yet passed";
    "Post Set Event" -> "Mark set as failed if it has not yet passed";
    "BL QC passed? [2]";
    "Skip to end of Set";
    "Abort";
    "All checks passed" -> "Abort"  [label="No"];
    "BL QC passed? [1]";
    "Mid Sweep Event" -> "BL QC passed? [1]";
    "Grab next completely acquired chunk\n (500ms pre/50ms post) of stimset baseline";
    "BL QC passed? [1]" -> "Grab next completely acquired chunk\n (500ms pre/50ms post) of stimset baseline"  [label="No"];
    "Baseline chunk type";
    "Chunk already evaluated?";
    "Grab next completely acquired chunk\n (500ms pre/50ms post) of stimset baseline" -> "Chunk already evaluated?"  [label="Have one"];
    "Grab next completely acquired chunk\n (500ms pre/50ms post) of stimset baseline" -> "Last chunk?"  [label="None left"];
    "Last chunk?" -> "Mark BL QC as failed"  [label="Yes"];
    "Chunk already evaluated?" -> "Grab next completely acquired chunk\n (500ms pre/50ms post) of stimset baseline"  [label="Yes"];
    "Chunk already evaluated?" -> "Baseline chunk type"  [label="No"];
    "Check RMS short";
    "Check RMS long";
    "Check target voltage [1]";
    "Check target voltage [2]";
    "Baseline chunk type" -> "Check RMS short"  [label="pre pulse"];
    "Check RMS short" -> "Check RMS long"  [label="Passed"];
    "Check RMS short" -> "Mark BL QC as failed"  [label="Failed"];
    "Check RMS long" -> "Mark BL QC as failed"  [label="Failed"];
    "Check RMS long" -> "Check target voltage [1]"  [label="Passed"];
    "Mark chunk as passed/failed [1]";
    "Check target voltage [1]" -> "Mark chunk as passed/failed [1]";
    "Mark chunk as passed/failed [1]" -> "Grab next completely acquired chunk\n (500ms pre/50ms post) of stimset baseline"  [label="Passed"];
    "Early sweep stop, repurpose ITI and add 10s to ITI";
    "Mark chunk as passed/failed [1]" -> "Early sweep stop, repurpose ITI and add 10s to ITI"  [label="Failed"];
    "Baseline chunk type" -> "Check target voltage [2]"  [label="post pulse"];
    "Check target voltage [2]" -> "Mark chunk as passed/failed [2]";
    "Mark chunk as passed/failed [2]" -> "Grab next completely acquired chunk\n (500ms pre/50ms post) of stimset baseline"  [label="Failed"];
    "Mark chunk as passed/failed [2]" -> "Mark BL QC as passed"  [label="Passed"];
    "Set \"ITI\" to 4s";
    "Prepare DAQ Event" -> "Set \"ITI\" to 4s";
    "Search for final DAScale in one of the existing sweeps";
    "Prepare DAQ Event" -> "Search for final DAScale in one of the existing sweeps";
    "Search for final DAScale in one of the existing sweeps" -> "Abort"  [label="Not found"];
    "First Sweep?";
    "First Sweep?" -> "Store final DAScale of last sweep\n from previous RAC as initial DAScale"  [label="Yes"];
    "Post Sweep Event" -> "First Sweep?";
    "BL QC passed? [2]" -> "Spike detected?\n(x range: pulse onset to end of sweep\ny condition: max above 10mV)\nStore result in labnotebook"  [label="Yes"];
    "Spike detected?\n(x range: pulse onset to end of sweep\ny condition: max above 10mV)\nStore result in labnotebook" -> "Previous sweep has opposite spike result";
    "Previous sweep has opposite spike result" -> "Mark set as passed"  [label="Yes"];
    "Mark set as passed" -> "Skip to end of Set";
    "Previous sweep has opposite spike result" -> "Spike detected? (queried from labnotebook)"  [label="No"];
    "Spike detected? (queried from labnotebook)" -> "Offset DAScale by -10pA"  [label="Yes"];
    "Offset DAScale by +10pA" -> "Difference to initial DAScale larger than 60pA?";
    "Spike detected? (queried from labnotebook)" -> "Offset DAScale by +10pA"  [label="No"];
    "Offset DAScale by -10pA" -> "Difference to initial DAScale larger than 60pA?";
    "Difference to initial DAScale larger than 60pA?" -> "Mark set as failed"  [label="Yes"];
    "Mark set as failed" -> "Skip to end of Set";
    "Store final DAScale of last sweep\n from previous RAC as initial DAScale" -> "BL QC passed? [2]";
    "Set \"Repeat Sets\" to 1";
    "Prepare DAQ Event" -> "Set \"Repeat Sets\" to 1";
    "Early sweep stop";
    "Mark BL QC as passed" -> "Early sweep stop";
    "Stimset is large enough";
    "Prepare DAQ Event" -> "Stimset is large enough";
    "Stimset is large enough" -> "All checks passed";
}
