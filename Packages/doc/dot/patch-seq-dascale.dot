digraph G {
	graph [center=true,
		compound=true,
		fontcolor=black,
		fontname=Helvetica,
		fontsize=14,
		penwidth=0.1,
		ratio="0,01"
	];
	node [color=2,
		colorscheme=blues4,
		fillcolor=1,
		fontcolor=4,
		fontname=Helvetica,
		fontsize=13,
		label="\N",
		shape=ellipse,
		style=filled
	];
	edge [color=2,
		colorscheme=blues3,
		comment="Wildcard edge",
		fontcolor=3,
		fontname=Helvetica,
		fontsize=10,
		style=solid
	];
	"Start DAQ/RA" -> "Mid Sweep Event";
	"Start DAQ/RA" -> "Post DAQ Event";
	"Start DAQ/RA" -> "Post Set Event";
	"Start DAQ/RA" -> "Post Sweep Event";
	"Start DAQ/RA" -> "Prepare DAQ/Pre Set Event";
	"Mid Sweep Event" -> "BL QC passed?";
	"Post DAQ Event" -> "Update Dashboard";
	"Post Set Event" -> "Update Dashboard";
	"Post Set Event" -> "Get OperationMode [2]";
	"Post Sweep Event" -> "Last Sweep passed?";
	"Prepare DAQ/Pre Set Event" -> "Enable \"Autobias\"";
	"Prepare DAQ/Pre Set Event" -> "Valid Autobias voltage (finite and non-zero)";
	"Prepare DAQ/Pre Set Event" -> "All required analysis parameters present?\n DAScale : numeric wave\n OperationMode: string\nSamplingMultiplier: variable";
	"Enable \"TP during ITI\"" -> "Enable \"Multidevice DAQ\"";
	"Enable \"Autobias\"" -> "Enable \"TP during ITI\"";
	"Enable \"Multidevice DAQ\"" -> "Disable \"dDAQ\"/\"oodDAQ\"";
	"Valid Autobias voltage (finite and non-zero)" -> "Check if no TTL channels are active";
	"Disable \"dDAQ\"/\"oodDAQ\"" -> "Enable \"Repeated Acquisition\"";
	"Enable \"Repeated Acquisition\"" -> "Enable \"Insert TP\"";
	"Check if no TTL channels are active" -> "Stimset is large enough";
	"All required analysis parameters present?\n DAScale : numeric wave\n OperationMode: string\nSamplingMultiplier: variable" -> "Get OperationMode"	[label=Yes];
	"All required analysis parameters present?\n DAScale : numeric wave\n OperationMode: string\nSamplingMultiplier: variable" -> Abort	[label=No];
	"Get OperationMode" -> "Look for an existing and passing rheobase sweep\n within a passing set and\n a pulse duration of more than 500ms"	[label=Supra];
	"Get OperationMode" -> "Use the DAScale values\nfrom the analysis parameters"	[label=Sub];
	"Check if only one headstage is active" -> "All checks passed";
	"Stimset is large enough" -> "Check if mode is IC";
	"Check if mode is IC" -> "Check if only one headstage is active";
	"All checks passed" -> Abort	[label=No];
	"All checks passed" -> "Use first DAScale value"	[label=Yes];
	"Look for an existing and passing rheobase sweep\n within a passing set and\n a pulse duration of more than 500ms" -> Abort	[label="Not found"];
	"Look for an existing and passing rheobase sweep\n within a passing set and\n a pulse duration of more than 500ms" -> "Use the DAScale value of that sweep\n as offset to the DAScale values from the analysis parameters"	[label=Found];
	"Last Sweep passed?" -> "Check if the Set can still pass"	[label=No];
	"Last Sweep passed?" -> "Get OperationMode [3]"	[label=Yes];
	"Check if $NUM_DA_SCALES\nsweeps passed from RA cycle" -> "Skip to end of active set"	[label=Yes];
	"Check if $NUM_DA_SCALES\nsweeps passed from RA cycle" -> "Use next DAScale value"	[label=No];
	"Check if the Set can still pass" -> "Skip to end"	[label=No];
	"BL QC passed?" -> "Grab next completely acquired chunk\n(500ms) of stimset baseline"	[label=No];
	"Grab next completely acquired chunk\n(500ms) of stimset baseline" -> "Chunk already evaluated?"	[label="Have one"];
	"Grab next completely acquired chunk\n(500ms) of stimset baseline" -> "Last chunk?"	[label="None left"];
	"Baseline chunk type" -> "Check RMS short"	[label="pre pulse"];
	"Baseline chunk type" -> "Check target voltage [2]"	[label="post pulse"];
	"Chunk already evaluated?" -> "Grab next completely acquired chunk\n(500ms) of stimset baseline"	[label=Yes];
	"Chunk already evaluated?" -> "Baseline chunk type"	[label=No];
	"Last chunk?" -> "Mark Sweep as failed"	[label=Yes];
	"Check RMS short" -> "Check RMS long"	[label=Passed];
	"Check RMS short" -> "Add BL QC failed labnotebook entry"	[label=Failed];
	"Check RMS long" -> "Check target voltage [1]"	[label=Passed];
	"Check RMS long" -> "Add BL QC failed labnotebook entry"	[label=Failed];
	"Check target voltage [1]" -> "Mark chunk as passed/failed [1]";
	"Check target voltage [2]" -> "Mark chunk as passed/failed [2]";
	"Add BL QC passed labnotebook entry" -> "Early Sweep stop";
	"Add BL QC failed labnotebook entry" -> "Early Sweep stop";
	"Mark chunk as passed/failed [1]" -> "Grab next completely acquired chunk\n(500ms) of stimset baseline"	[label=Passed];
	"Mark chunk as passed/failed [1]" -> "Early sweep stop, repurpose ITI and add 10s to ITI"	[label=Failed];
	"Mark chunk as passed/failed [2]" -> "Grab next completely acquired chunk\n(500ms) of stimset baseline"	[label=Failed];
	"Mark chunk as passed/failed [2]" -> "Add BL QC passed labnotebook entry"	[label=Passed];
	"Get OperationMode [2]" -> "Mark set as passed if $NUM_DA_SCALES\nsweeps passed, as failure otherwise"	[label=Sub];
	"Get OperationMode [2]" -> "Labnotebook has fI-Slope reached entry?"	[label=Supra];
	"Optional FinalSlopePercent\nparameter present?" -> "Add labnotebook entry if the\ndesired fI-Slope was reached or not"	[label=Yes];
	"Get OperationMode [3]" -> "Calculate TP-like properties\nand store them in the\nlabnotebook"	[label=Sub];
	"Get OperationMode [3]" -> "Search for spikes\n(x range: pulse onset to end of sweep\ny condition: max above 0.01mV)"	[label=Supra];
	"Calculate TP-like properties\nand store them in the\nlabnotebook" -> "Check if $NUM_DA_SCALES\nsweeps passed from RA cycle";
	"Calculate TP-like properties\nand store them in the\nlabnotebook" -> "Optional parameter ShowPlot\nis true or missing";
	"Optional parameter ShowPlot\nis true or missing" -> "Plot the resistance (Sub)\nor fI (Supra)"	[label=Yes];
	"Search for spikes\n(x range: pulse onset to end of sweep\ny condition: max above 0.01mV)" -> "Write number of spikes\ninto labnotebook";
	"Write number of spikes\ninto labnotebook" -> "Analysis parameters MinimumSpikeCount,\n MaximumSpikeCount,\n DAScaleModifier\n present?";
	"Write number of spikes\ninto labnotebook" -> "Determine pulse duration\nand write it into the labnotebook";
	"Analysis parameters MinimumSpikeCount,\n MaximumSpikeCount,\n DAScaleModifier\n present?" -> "Use next DAScale value"	[label=No];
	"Analysis parameters MinimumSpikeCount,\n MaximumSpikeCount,\n DAScaleModifier\n present?" -> "Spike count relative to\nMin and Max?"	[label=Yes];
	"Spike count relative to\nMin and Max?" -> "Use next DAScale value"	[label="In-between"];
	"Spike count relative to\nMin and Max?" -> "Adapt DAScale\n by a factor of 1 - Modifier"	[label=Above];
	"Spike count relative to\nMin and Max?" -> "Adapt DAScale\n by a factor of 1 + Modifier"	[label=Below];
	"Adapt DAScale\n by a factor of 1 - Modifier" -> "Use next DAScale value";
	"Adapt DAScale\n by a factor of 1 + Modifier" -> "Use next DAScale value";
	"Determine pulse duration\nand write it into the labnotebook" -> "Create spike frequency vs DAScale (fI) data\nand peform linear regression";
	"Create spike frequency vs DAScale (fI) data\nand peform linear regression" -> "Optional parameter ShowPlot\nis true or missing";
	"Create spike frequency vs DAScale (fI) data\nand peform linear regression" -> "Write fI-Slope into labnotebook";
	"Write fI-Slope into labnotebook" -> "Optional FinalSlopePercent\nparameter present?";
	"Labnotebook has fI-Slope reached entry?" -> "Mark set as passed if $NUM_DA_SCALES\nsweeps passed, as failure otherwise"	[label=No];
	"Labnotebook has fI-Slope reached entry?" -> "Reached?"	[label=Yes];
	"Reached?" -> "Mark set as passed if $NUM_DA_SCALES\nsweeps passed, as failure otherwise"	[label=Yes];
	"Reached?" -> "Mark set as failed"	[label=No];
}
