digraph G {
	graph [center=true,
		compound=true,
		fontcolor=black,
		fontname=Helvetica,
		fontsize=14,
		penwidth=0.1,
		rank=same,
		ratio="0,01"
	];
	node [color=2,
		colorscheme=blues4,
		fillcolor=1,
		fontcolor=4,
		fontname=Helvetica,
		fontsize=13,
		label="\N",
		shape=ellipse,
		style=filled
	];
	edge [color=2,
		colorscheme=blues3,
		comment="Wildcard edge",
		fontcolor=3,
		fontname=Helvetica,
		fontsize=10,
		style=solid
	];
	"Start DAQ/RA" -> "Mid Sweep Event";
	"Start DAQ/RA" -> "Post Set Event";
	"Start DAQ/RA" -> "Post Sweep Event";
	"Start DAQ/RA" -> "Post DAQ Event";
	"Start DAQ/RA" -> "Prepare DAQ/Pre Set Event";
	"Mid Sweep Event" -> "BL QC passed?";
	"Mid Sweep Event" -> "Search spike result in labnotebook";
	"Post Set Event" -> "Mark set as passed if 3 sweeps passed, as failure otherwise";
	"Post Sweep Event" -> "Last Sweep passed?";
	"Post DAQ Event" -> "Update Dashboard";
	"Prepare DAQ/Pre Set Event" -> "Enable \"Autobias\"";
	"Prepare DAQ/Pre Set Event" -> "Valid Autobias voltage (finite and non-zero)";
	"Enable \"TP during ITI\"" -> "Disable \"dDAQ\"/\"oodDAQ\"";
	"Enable \"Autobias\"" -> "Enable \"Inserted TP\"";
	"Enable \"Multidevice DAQ\"" -> "Enable \"TP during ITI\"";
	"Enable \"Inserted TP\"" -> "Enable \"Multidevice DAQ\"";
	"Stimset is longer than 1.5s" -> "Check if only one headstage is active";
	"Valid Autobias voltage (finite and non-zero)" -> "All required analysis parameters present?\nSamplingMultiplier: variable";
	"Disable \"dDAQ\"/\"oodDAQ\"" -> "Set ITI to zero";
	"Stimset has at least three sweeps" -> "Stimset is large enough";
	"Set DAScale to 1pA" -> "Enable \"Repeated Acquisition\"";
	"Set ITI to zero" -> "Set DAScale to 1pA";
	"Stimset is large enough" -> "Check if mode is IC";
	"Check if mode is IC" -> "Check if no TTL channels are active";
	"Check if no TTL channels are active" -> "All checks passed";
	"All required analysis parameters present?\nSamplingMultiplier: variable" -> "Stimset is longer than 1.5s";
	"Check if only one headstage is active" -> "Stimset has at least three sweeps";
	"All checks passed" -> Abort	[label=No];
	"Last Sweep passed?" -> "Check if 3 sweeps passed from RA cycle"	[label=Yes];
	"Last Sweep passed?" -> "Check if the Set can still pass"	[label=No];
	"Check if 3 sweeps passed from RA cycle" -> "Skip to end of active set"	[label=Yes];
	"Check if the Set can still pass" -> "Skip to end"	[label=No];
	"BL QC passed?" -> "Grab next completely acquired chunk (500ms) of stimset baseline"	[label=No];
	"Grab next completely acquired chunk (500ms) of stimset baseline" -> "Chunk already evaluated?"	[label="Have one"];
	"Grab next completely acquired chunk (500ms) of stimset baseline" -> "Last chunk?"	[label="None left"];
	"Baseline chunk type" -> "Check RMS short"	[label="pre pulse"];
	"Baseline chunk type" -> "Check target voltage [2]"	[label="post pulse"];
	"Chunk already evaluated?" -> "Grab next completely acquired chunk (500ms) of stimset baseline"	[label=Yes];
	"Chunk already evaluated?" -> "Baseline chunk type"	[label=No];
	"Last chunk?" -> "Mark Sweep/BL QC as failed"	[label=Yes];
	"Mark Sweep/BL QC as failed" -> "Early Sweep stop";
	"Check RMS short" -> "Mark Sweep/BL QC as failed"	[label=Failed];
	"Check RMS short" -> "Check RMS long"	[label=Passed];
	"Check RMS long" -> "Mark Sweep/BL QC as failed"	[label=Failed];
	"Check RMS long" -> "Check target voltage [1]"	[label=Passed];
	"Check target voltage [1]" -> "Mark chunk as passed/failed [1]";
	"Check target voltage [2]" -> "Mark chunk as passed/failed [2]";
	"Mark Sweep/BL QC as passed" -> "Early Sweep stop";
	"Mark chunk as passed/failed [1]" -> "Grab next completely acquired chunk (500ms) of stimset baseline"	[label=Passed];
	"Mark chunk as passed/failed [1]" -> "Early sweep stop, repurpose ITI and add 10s to ITI"	[label=Failed];
	"Mark chunk as passed/failed [2]" -> "Grab next completely acquired chunk (500ms) of stimset baseline"	[label=Failed];
	"Mark chunk as passed/failed [2]" -> "Mark Sweep/BL QC as passed"	[label=Passed];
	"Search spike result in labnotebook" -> "Get pulse duration from labnotebook (calculate if not present)"	[label="Not Found"];
	"Get pulse duration from labnotebook (calculate if not present)" -> "After pulse onset";
	"After pulse onset" -> "Requested number of spikes detected?\n(x range: pulse onset to end of sweep\ny condition: max above 0.01mV)"	[label=Yes];
	"Requested number of spikes detected?\n(x range: pulse onset to end of sweep\ny condition: max above 0.01mV)" -> "After pulse"	[label=No];
	"Requested number of spikes detected?\n(x range: pulse onset to end of sweep\ny condition: max above 0.01mV)" -> "Write spike result (true/false) into labnotebook"	[label=Yes];
	"After pulse" -> "Write spike result \"failed\" into LBN"	[label=Yes];
	"Write spike result (true/false) into labnotebook" -> "Write spike position in ms into labnotebook";
	"Write spike position in ms into labnotebook" -> "Set DA channel to zero from here to the end\n(implies DAQ restart)";
	"Set DA channel to zero from here to the end\n(implies DAQ restart)" -> "Set AD channel to zero for the duration of the DAQ restart";
	"Set AD channel to zero for the duration of the DAQ restart" -> "Recalculate pulse duration and\nstore in labnotebook";
}
